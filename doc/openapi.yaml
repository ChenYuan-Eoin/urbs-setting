# Content generated by 'make doc'. DO NOT EDIT.

openapi: 3.0.0
info:
  description: |-
    Urbs 灰度平台灰度策略服务
  version: 1.3.0
  title: urbs-setting
servers:
  - url: https://urbs-setting:8443
    description: 这是内部服务，请替换为实际 URL
tags:
  - name: Version
    description: 获取 urbs-setting 服务版本信息
  - name: User
    description: User 用户相关接口
  - name: Group
    description: Group 群组相关接口
  - name: Product
    description: Product 产品相关接口
  - name: Label
    description: Label 灰度标签相关接口
  - name: Module
    description: Module 产品功能模块相关接口
  - name: Setting
    description: Setting 产品功能模块配置项相关接口
components:
  parameters:
    HeaderAuthorization:
      in: header
      name: Authorization
      description: '请求 JWT token, 格式如: `Bearer xxx`'
      required: true
      schema:
        type: string
    PathUID:
      in: path
      name: uid
      description: 用户/群组 uid
      required: true
      schema:
        type: string
    PathHID:
      in: path
      name: uid
      description: 标签/配置项/发布规则 hid
      required: true
      schema:
        type: string
    PathProduct:
      in: path
      name: product
      description: 产品名称
      required: true
      schema:
        type: string
    PathModule:
      in: path
      name: module
      description: 功能模块名称
      required: true
      schema:
        type: string
    PathSetting:
      in: path
      name: setting
      description: 配置项名称
      required: true
      schema:
        type: string
    PathLabel:
      in: path
      name: label
      description: 灰度标签名称
      required: true
      schema:
        type: string
    QueryProduct:
      in: query
      name: product
      description: 产品名称
      required: true
      schema:
        type: string
    QueryPageSize:
      in: query
      name: pageSize
      description: 分页大小，默认为 10，(1-1000]
      required: false
      schema:
        type: integer
        format: int32
        default: 10
        example: 20
    QueryPageToken:
      in: query
      name: pageToken
      description: 分页请求标记，来自于响应结果的 nextPageToken
      required: false
      schema:
        title: pageToken
        type: string
        default: ""
        example: "2020-03-13T11%3A59%3A48Z"
    QueryQ:
      in: query
      name: q
      description: 部分列表类 API 支持搜索，q 为搜索关键词
      required: false
      schema:
        title: q
        type: string
        default: ""
  securitySchemes:
    HeaderAuthorizationJWT:
      name: Authorization
      type: http
      scheme: bearer
      bearerFormat: JWT
      in: header

  schemas:
    NextPageToken:
      title: nextPageToken
      type: string
      description: 用于分页查询时用于获取下一页数据的 token，当为空值时表示没有下一页了
      example: ""
    TotalSize:
      title: totalSize
      type: integer
      format: int64
      description: 当前分页查询的总数据量
      example: 1
    Version:
      type: object
      properties:
        name:
          type: string
          description: 服务名称
          example: urbs-setting
        version:
          type: string
          description: 当前版本
          example: v1.2.0
        gitSHA1:
          type: string
          description: git commit hash
          example: cd7e82a
        buildTime:
          type: string
          format: date-time
          description: 打包构建时间
          example: 2020-03-25T06:24:25Z
    CacheLabelInfo:
      type: object
      properties:
        l:
          type: string
          description: 灰度标签名称
          example: beta
        cls:
          type: array
          description: 灰度标签适用的 Clients 客户端类型列表，当列表为空时表示全适用
          example: ["ios", "android", "web"]
          items:
            type: string
        chs:
          type: array
          description: 灰度标签适用的 Channels 版本通道列表，当列表为空时表示全适用
          example: ["stable", "beta", "dev"]
          items:
            type: string
    LabelInfo:
      type: object
      properties:
        hid:
          type: string
          description: 灰度标签的 hid
          example: AwAAAAAAAAB25V_QnbhCuRwF
        product:
          type: string
          description: 灰度标签所属的产品名称
          example: teambition
        name:
          type: string
          description: 灰度标签名称，同一产品下唯一（不能重名）
          example: beta
        desc:
          type: string
          description: 灰度标签描述
        channels:
          type: array
          description: 灰度标签适用版本通道
          example: ["beta"]
          items:
            type: string
        clients:
          type: array
          description: 灰度标签适用客户端类型
          example: ["web"]
          items:
            type: string
        status:
          type: integer
          format: int64
          description: 使用用户计数（被动异步计算，非精确值）
          example: 100
        release:
          type: integer
          format: int64
          description: 标签发布（被设置）计数
          example: 2
        createdAt:
          type: string
          format: date-time
          description: 灰度标签创建时间
          example: 2020-03-25T06:24:25Z
        updatedAt:
          type: string
          format: date-time
          description: 灰度标签更新时间
          example: 2020-03-25T06:24:25Z
        offlineAt:
          type: string
          format: date-time
          description: 灰度标签下线时间
          default: null
          example: null
    MyLabel:
      type: object
      properties:
        hid:
          type: string
          description: 灰度标签的 hid
          example: AwAAAAAAAAB25V_QnbhCuRwF
        product:
          type: string
          description: 灰度标签所属的产品名称
          example: teambition
        name:
          type: string
          description: 灰度标签名称
          example: task-share
        desc:
          type: string
          description: 灰度标签描述
        release:
          type: integer
          format: int64
          description: 被设置批次
          example: 1
        assignedAt:
          type: string
          format: date-time
          description: 被设置时间
          example: 2020-03-25T06:24:25Z
    MySetting:
      type: object
      properties:
        hid:
          type: string
          description: 配置项的 hid
          example: AwAAAAAAAAB25V_QnbhCuRwF
        product:
          type: string
          description: 配置项所属的产品名称
          example: teambition
        module:
          type: string
          description: 配置项所属的功能模块名称
          example: task
        name:
          type: string
          description: 配置项名称
          example: task-share
        desc:
          type: string
          description: 配置项描述，
        value:
          type: string
          description: 配置项值
          example: disable
        lastValue:
          type: string
          description: 配置项值
          example: ""
        release:
          type: integer
          format: int64
          description: 被设置批次
          example: 1
        assignedAt:
          type: string
          format: date-time
          description: 被设置时间
          example: 2020-03-25T06:24:25Z
    User:
      type: object
      properties:
        uid:
          type: string
          description: 用户的 uid
          example: 5e82d747fe02a50021d339f3
        labels:
          type: string
          description: 缓存的用户当前被设置的 labels
          example: '{"teambition":[{"l":"dev"}]}'
        activeAt:
          type: integer
          format: int64
          description: 用户活跃时间戳，1970 以来的秒数，非精确值
          example: 1585636012
        createdAt:
          type: string
          format: date-time
          description: 用户创建时间
          example: 2020-03-25T06:24:25Z
    Group:
      type: object
      properties:
        uid:
          type: string
          description: 群组的 uid
          example: 5e82d747fe02a50021d339f3
        kind:
          type: string
          description: 群组类型
          example: organization
        desc:
          type: string
          description: 群组的描述
        syncAt:
          type: integer
          format: int64
          description: 群组成员同步时间点，1970 以来的秒数
          example: 1585636012
        status:
          type: integer
          format: int64
          description: 群组成员数量，非精确值
          example: 99
        createdAt:
          type: string
          format: date-time
          description: 灰度标签创建时间
          example: 2020-03-25T06:24:25Z
        updatedAt:
          type: string
          format: date-time
          description: 灰度标签更新时间
          example: 2020-03-25T06:24:25Z
    GroupMember:
      type: object
      properties:
        user:
          type: string
          description: 群组成员的用户 uid
          example: 5e82d747fe02a50021d339f3
        syncAt:
          type: integer
          format: int64
          description: 该群组成员同步时间，1970 以来的秒数
          example: 1585636012
        createdAt:
          type: string
          format: date-time
          description: 该群组成员添加时间
          example: 2020-03-25T06:24:25Z
    Product:
      type: object
      properties:
        name:
          type: string
          description: 产品名称
          example: urbs
        desc:
          type: string
          description: 产品的描述
        status:
          type: integer
          format: int64
          description: 产品状态值
        createdAt:
          type: string
          format: date-time
          description: 产品创建时间
          example: 2020-03-25T06:24:25Z
        updatedAt:
          type: string
          format: date-time
          description: 产品更新时间
          example: 2020-03-25T06:24:25Z
        deletedAt:
          type: string
          format: date-time
          description: 产品删除时间
          default: null
        offlineAt:
          type: string
          format: date-time
          description: 产品下线时间
          default: null
    ProductStatistics:
      type: object
      properties:
        labels:
          type: integer
          format: int64
          description: 产品下灰度标签数量
        modules:
          type: integer
          format: int64
          description: 产品下功能模块数量
        settings:
          type: integer
          format: int64
          description: 产品下配置项数量
        release:
          type: integer
          format: int64
          description: 产品下灰度标签和配置项总发布次数
        status:
          type: integer
          format: int64
          description: 产品下灰度标签和配置项总作用人数（非精确值）
    Module:
      type: object
      properties:
        name:
          type: string
          description: 功能模块名称
          example: urbs
        desc:
          type: string
          description: 功能模块的描述
        status:
          type: integer
          format: int64
          description: 有效配置项计数（被动异步计算，非精确值）
        createdAt:
          type: string
          format: date-time
          description: 功能模块创建时间
          example: 2020-03-25T06:24:25Z
        updatedAt:
          type: string
          format: date-time
          description: 功能模块更新时间
          example: 2020-03-25T06:24:25Z
        offlineAt:
          type: string
          format: date-time
          description: 功能模块下线时间
          default: null
    SettingInfo:
      type: object
      properties:
        hid:
          type: string
          description: 配置项名称
          example: urbs
        product:
          type: string
          description: 配置项名称
          example: urbs
        module:
          type: string
          description: 配置项名称
          example: urbs
        name:
          type: string
          description: 配置项名称
          example: urbs
        desc:
          type: string
          description: 配置项的描述
        status:
          type: integer
          format: int64
          description: 使用用户计数（被动异步计算，非精确值）
        release:
          type: integer
          format: int64
          description: 配置项发布（被设置）计数
        channels:
          type: array
          description: 该配置项适用的产品版本通道，是服务端配置的可用版本通道的子集，为空表示适用所有
          required: true
          example: ["beta"]
          items:
            type: string
        clients:
          type: array
          description: 该配置项适用的客户端类型，是服务端配置的可用客户端类型的子集，为空表示适用所有
          required: true
          example: ["ios", "android"]
          items:
            type: string
        values:
          type: array
          description: 该配置项可选值列表，配置项指派给用户或群组时只能从该列表中选择合法值
          required: true
          example: ["true", "false"]
          items:
            type: string
        createdAt:
          type: string
          format: date-time
          description: 配置项创建时间
          example: 2020-03-25T06:24:25Z
        updatedAt:
          type: string
          format: date-time
          description: 配置项更新时间
          example: 2020-03-25T06:24:25Z
        offlineAt:
          type: string
          format: date-time
          description: 配置项下线时间
          default: null
    LabelReleaseInfo:
      type: object
      properties:
        release:
          type: integer
          format: int64
          description: 发布批次（被设置）计数
          example: 2
        users:
          type: array
          description: 用户 uid 数组
          example: ["50c32afae8cf1439d35a87e6", "5e69a9bd6ac3cd00213ea969"]
          items:
            type: string
        groups:
          type: array
          description: 群组 uid 数组
          items:
            type: string
    LabelGroupInfo:
      type: object
      properties:
        labelHID:
          type: string
          description: 灰度标签 hid
          example: urbs
        assignedAt:
          type: string
          format: date-time
          description: 灰度标签设置时间
          example: 2020-03-25T06:24:25Z
        release:
          type: integer
          format: int64
          description: 发布批次（被设置）计数
          example: 2
        group:
          type: string
          description: 群组的 uid
          example: 50c32afae8cf1439d35a87e6
        kind:
          type: string
          description: 群组类型
          example: organization
        desc:
          type: string
          description: 群组的描述
        status:
          type: integer
          format: int64
          description: 群组成员数量，非精确值
          example: 99
    LabelUserInfo:
      type: object
      properties:
        labelHID:
          type: string
          description: 灰度标签 hid
          example: urbs
        assignedAt:
          type: string
          format: date-time
          description: 灰度标签设置时间
          example: 2020-03-25T06:24:25Z
        release:
          type: integer
          format: int64
          description: 发布批次（被设置）计数
          example: 2
        user:
          type: string
          description: 用户的 uid
          example: 50c32afae8cf1439d35a87e6
    LabelRuleInfo:
      type: object
      properties:
        hid:
          type: string
          description: 发布规则的 hid
          example: urbs
        labelHID:
          type: string
          description: 发布规则所属灰度标签的 hid
          example: urbs
        kind:
          type: string
          description: 发布规则类型，目前仅支持 "userPercent"
          example: userPercent
        rule:
          type: object
          description: 发布规则内容，JSON 对象，具体格式取决于 kind
          properties:
            value:
              type: integer
              format: int64
              description: 当 kind 为 "userPercent" 时，value 为百分比，取值 [0, 100]
              example: 10
          example: '{"value": 10}'
        release:
          type: integer
          format: int64
          description: 发布批次（被设置）计数
          example: 2
        createdAt:
          type: string
          format: date-time
          description: 创建时间
          example: 2020-03-25T06:24:25Z
        updatedAt:
          type: string
          format: date-time
          description: 更新时间
          example: 2020-03-25T06:24:25Z
    SettingReleaseInfo:
      type: object
      properties:
        release:
          type: integer
          format: int64
          description: 发布批次（被设置）计数
          example: 2
        users:
          type: array
          description: 用户 uid 数组
          example: ["50c32afae8cf1439d35a87e6", "5e69a9bd6ac3cd00213ea969"]
          items:
            type: string
        groups:
          type: array
          description: 群组 uid 数组
          items:
            type: string
        value:
          type: string
          description: 配置项值
          example: x
    SettingGroupInfo:
      type: object
      properties:
        settingHID:
          type: string
          description: 配置项的 hid
          example: urbs
        assignedAt:
          type: string
          format: date-time
          description: 配置项设置时间
          example: 2020-03-25T06:24:25Z
        release:
          type: integer
          format: int64
          description: 发布批次（被设置）计数
          example: 2
        group:
          type: string
          description: 群组的 uid
          example: 50c32afae8cf1439d35a87e6
        kind:
          type: string
          description: 群组类型
          example: organization
        desc:
          type: string
          description: 群组的描述
        status:
          type: integer
          format: int64
          description: 群组成员数量，非精确值
          example: 99
        value:
          type: string
          description: 配置项值
          example: b
        lastValue:
          type: string
          description: 上一个配置项值
          example: a
    SettingUserInfo:
      type: object
      properties:
        settingHID:
          type: string
          description: 配置项的 hid
          example: urbs
        assignedAt:
          type: string
          format: date-time
          description: 配置项设置时间
          example: 2020-03-25T06:24:25Z
        release:
          type: integer
          format: int64
          description: 发布批次（被设置）计数
          example: 2
        user:
          type: string
          description: 用户的 uid
          example: 50c32afae8cf1439d35a87e6
        value:
          type: string
          description: 配置项值
          example: b
        lastValue:
          type: string
          description: 上一个配置项值
          example: a
      SettingRuleInfo:
      type: object
      properties:
        hid:
          type: string
          description: 发布规则的 hid
          example: urbs
        settingHID:
          type: string
          description: 发布规则所属配置项的 hid
          example: urbs
        kind:
          type: string
          description: 发布规则类型，目前仅支持 "userPercent"
          example: userPercent
        rule:
          type: object
          description: 发布规则内容，JSON 对象，具体格式取决于 kind
          properties:
            value:
              type: integer
              format: int64
              description: 当 kind 为 "userPercent" 时，value 为百分比，取值 [0, 100]
              example: 10
          example: '{"value": 10}'
        value:
          type: string
          description: 发布规则的配置项值
          example: x
        release:
          type: integer
          format: int64
          description: 发布批次（被设置）计数
          example: 2
        createdAt:
          type: string
          format: date-time
          description: 创建时间
          example: 2020-03-25T06:24:25Z
        updatedAt:
          type: string
          format: date-time
          description: 更新时间
          example: 2020-03-25T06:24:25Z
  requestBodies:
    UsersBody:
      required: true
      description: 批量添加用户请求数据
      content:
        application/json:
          schema:
            type: object
            properties:
              users:
                type: array
                description: 用户 uid 数组，必须符合正则 /^[0-9A-Za-z._=-]{3,63}$/
                required: true
                example: ["50c32afae8cf1439d35a87e6", "5e69a9bd6ac3cd00213ea969"]
                items:
                  type: string
    GroupsBody:
      required: true
      description: 批量添加群组请求数据
      content:
        application/json:
          schema:
            type: object
            properties:
              groups:
                type: array
                description: 群组信息数组
                required: true
                example: [{"uid": "50c32afae8cf1439d35a87e6", "kind": "organization"}]
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                      description: 群组 uid，必须符合正则 /^[0-9A-Za-z._=-]{3,63}$/
                      required: true
                    kind:
                      type: string
                      description: 群组类型
                      required: true
                    desc:
                      type: string
                      description: 群组描述
                      required: false
    GroupUpdateBody:
      required: true
      description: 更新群组请求数据
      content:
        application/json:
          schema:
            type: object
            properties:
              syncAt:
                type: integer
                title: syncAt
                format: int64
                description: 群组成员同步时间点，1970 以来的秒数
              desc:
                type: string
                title: desc
                description: 群组描述
            example: {"syncAt": 1585638012}
    NameDescBody:
      required: true
      description: 创建产品、功能模块等的请求数据
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                title: name
                required: true
                description: 名称，必须符合正则 /^[0-9a-z][0-9a-z.-]{0,61}[0-9a-z]$/
              desc:
                type: string
                title: desc
                description: 描述
            example: {"name": "product or module or setting"}
    LabelBody:
      required: true
      description: 创建灰度标签的请求数据
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                title: name
                required: true
                description: 名称，必须符合正则 /^[0-9a-z][0-9a-z-]{0,61}[0-9a-z]$/
              desc:
                type: string
                title: desc
                description: 描述
              channels:
                type: array
                description: 该灰度标签适用的产品版本通道，必须是服务端配置的可用版本通道的子集，为空表示适用所有
                example: ["beta"]
                items:
                  type: string
                default: null
              clients:
                type: array
                description: 该灰度标签适用的客户端类型，必须是服务端配置的可用客户端类型的子集，为空表示适用所有
                example: ["ios", "android"]
                items:
                  type: string
                default: null
            example: {"name": "beta"}
    SettingBody:
      required: true
      description: 创建配置项的请求数据
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                title: name
                required: true
                description: 名称，必须符合正则 /^[0-9a-z][0-9a-z.-]{0,61}[0-9a-z]$/
              desc:
                type: string
                title: desc
                description: 描述
              channels:
                type: array
                description: 该配置项适用的产品版本通道，必须是服务端配置的可用版本通道的子集，为空表示适用所有
                example: ["beta"]
                items:
                  type: string
                default: null
              clients:
                type: array
                description: 该配置项适用的客户端类型，必须是服务端配置的可用客户端类型的子集，为空表示适用所有
                example: ["ios", "android"]
                items:
                  type: string
                default: null
              values:
                type: array
                description: 该配置项可选值列表，配置项指派给用户或群组时只能从该列表中选择合法值
                example: ["true", "false"]
                items:
                  type: string
                default: null
            example: {"name": "some-setting"}
    ProductUpdateBody:
      required: true
      description: 更新产品请求数据
      content:
        application/json:
          schema:
            type: object
            properties:
              desc:
                type: string
                title: desc
                description: 产品描述
            example: {"desc": "Urbs 产品线，负责人：XXX"}
    ModuleUpdateBody:
      required: true
      description: 更新功能模块请求数据
      content:
        application/json:
          schema:
            type: object
            properties:
              desc:
                type: string
                title: desc
                description: 产品描述
            example: {"desc": "Urbs 产品线 xxx 模块，负责人：XXX"}
    SettingUpdateBody:
      required: true
      description: 更新配置项请求数据
      content:
        application/json:
          schema:
            type: object
            properties:
              desc:
                type: string
                title: desc
                description: 产品描述
                default: null
              channels:
                type: array
                description: 该配置项适用的产品版本通道，必须是服务端配置的可用版本通道的子集，为空表示适用所有
                example: ["beta"]
                items:
                  type: string
                default: null
              clients:
                type: array
                description: 该配置项适用的客户端类型，必须是服务端配置的可用客户端类型的子集，为空表示适用所有
                example: ["ios", "android"]
                items:
                  type: string
                default: null
              values:
                type: array
                description: 该配置项可选值列表，配置项指派给用户或群组时只能从该列表中选择合法值
                example: ["true", "false"]
                items:
                  type: string
                default: null
            example: {"values": ["a", "b"]}
    UsersGroupsBody:
      required: true
      description: 批量为用户或群组设置灰度标签或配置项的请求数据
      content:
        application/json:
          schema:
            type: object
            properties:
              users:
                type: array
                description: 用户 uid 数组，可以不提供，最大长度受 HTTP 请求最大字节数限制
                example: ["5c4057f0be825b390667abee"]
                items:
                  type: string
                default: null
              groups:
                type: array
                description: 群组 uid 数组，可以不提供，最大长度受 HTTP 请求最大字节数限制
                example: ["5bdc1846cd57df001789c751", "5bdc1846cd57df001789c751"]
                items:
                  type: string
                default: null
              value:
                type: string
                title: value
                description: 配置项值，设置灰度标签时不必提供
                default: null
                example: "beta"
    LabelUpdateBody:
      required: true
      description: 更新灰度标签的请求数据
      content:
        application/json:
          schema:
            type: object
            properties:
              desc:
                type: string
                title: desc
                description: 灰度标签描述
                default: null
              channels:
                type: array
                description: 该灰度标签适用的产品版本通道，必须是服务端配置的可用版本通道的子集，为空表示适用所有
                example: ["beta"]
                items:
                  type: string
                default: null
              clients:
                type: array
                description: 该灰度标签适用的客户端类型，必须是服务端配置的可用客户端类型的子集，为空表示适用所有
                example: ["ios", "android"]
                items:
                  type: string
                default: null
    RecallBody:
      required: true
      description: 撤销/回滚指定发布批次的灰度标签或配置项
      content:
        application/json:
          schema:
            type: object
            properties:
              release:
                type: integer
                format: int64
                description: 发布批次（被设置）计数
                example: 2
    LabelRuleBody:
      required: true
      description: 创建/更新灰度标签的发布规则
      content:
        application/json:
          schema:
            type: object
            properties:
              kind:
                type: string
                description: 发布规则类型，目前仅支持 "userPercent"
                example: userPercent
              rule:
                type: object
                description: 发布规则内容，JSON 对象，具体格式取决于 kind
                properties:
                  value:
                    type: integer
                    format: int64
                    description: 当 kind 为 "userPercent" 时，value 为百分比，取值 [0, 100]
                    example: 10
                example: '{"value": 10}'
      SettingRuleBody:
      required: true
      description: 创建/更新配置项的发布规则
      content:
        application/json:
          schema:
            type: object
            properties:
              kind:
                type: string
                description: 发布规则类型，目前仅支持 "userPercent"
                example: userPercent
              rule:
                type: object
                description: 发布规则内容，JSON 对象，具体格式取决于 kind
                properties:
                  value:
                    type: integer
                    format: int64
                    description: 当 kind 为 "userPercent" 时，value 为百分比，取值 [0, 100]
                    example: 10
                example: '{"value": 10}'
              value:
                type: string
                description: 发布规则的配置项值
                example: x
  responses:
    ErrorResponse:
      description: 标准错误返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: 错误代号
                example: NotFound
              message:
                type: string
                description: 错误详情
                example: some thing not found
    BoolRes:
      description: 标准 Boolean 类返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: boolean
                description: 是否成功
                example: true
    Version:
      description: version 返回结果
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Version"
    Healthz:
      description: Healthz 返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              dbConnect:
                type: boolean
                description: 是否连接了数据库
                example: true
    CacheLabelsInfo:
      description: 用于网关的用户灰度标签列表返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              timestamp:
                type: integer
                format: int64
                description: 灰度标签列表缓存生成时间，1970 以来的秒数
                example: 1585129360
              result:
                type: array
                description: 灰度标签列表
                items:
                  $ref: "#/components/schemas/CacheLabelInfo"
    LabelsInfoRes:
      description: 灰度标签列表返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              totalSize:
                $ref: "#/components/schemas/TotalSize"
              nextPageToken:
                $ref: "#/components/schemas/NextPageToken"
              result:
                type: array
                items:
                  $ref: "#/components/schemas/LabelInfo"
    LabelInfoRes:
      description: 灰度标签列表返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/LabelInfo"
    MyLabelsRes:
      description: 用户或群组被指派的灰度标签列表返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              nextPageToken:
                $ref: "#/components/schemas/NextPageToken"
              result:
                type: array
                items:
                  $ref: "#/components/schemas/MyLabel"
    MySettingsRes:
      description: 用户或群组被指派的配置项列表返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              nextPageToken:
                $ref: "#/components/schemas/NextPageToken"
              result:
                type: array
                items:
                  $ref: "#/components/schemas/MySetting"
    GroupsRes:
      description: 群组列表返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              totalSize:
                $ref: "#/components/schemas/TotalSize"
              nextPageToken:
                $ref: "#/components/schemas/NextPageToken"
              result:
                type: array
                items:
                  $ref: "#/components/schemas/Group"
    GroupRes:
      description: 单个群组返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/Group"
    GroupMembersRes:
      description: 群组成员列表返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              totalSize:
                $ref: "#/components/schemas/TotalSize"
              nextPageToken:
                $ref: "#/components/schemas/NextPageToken"
              result:
                type: array
                items:
                  $ref: "#/components/schemas/GroupMember"
    ProductsRes:
      description: 产品列表返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              totalSize:
                $ref: "#/components/schemas/TotalSize"
              nextPageToken:
                $ref: "#/components/schemas/NextPageToken"
              result:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
    ProductRes:
      description: 单个产品返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/Product"
    ModulesRes:
      description: 产品列表返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              totalSize:
                $ref: "#/components/schemas/TotalSize"
              nextPageToken:
                $ref: "#/components/schemas/NextPageToken"
              result:
                type: array
                items:
                  $ref: "#/components/schemas/Module"
    ModuleRes:
      description: 单个产品返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/Module"
    SettingsInfoRes:
      description: 产品列表返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              totalSize:
                $ref: "#/components/schemas/TotalSize"
              nextPageToken:
                $ref: "#/components/schemas/NextPageToken"
              result:
                type: array
                items:
                  $ref: "#/components/schemas/SettingInfo"
    SettingInfoRes:
      description: 单个配置项返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/SettingInfo"
    ProductStatisticsRes:
      description: 产品统计数据结果
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/ProductStatistics"
    LabelReleaseInfoRes:
      description: 设置灰度标签返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/LabelReleaseInfo"
    LabelGroupsInfoRes:
      description: 灰度标签作用的群组列表
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: "#/components/schemas/LabelGroupInfo"
    LabelUsersInfoRes:
      description: 灰度标签作用的用户列表
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: "#/components/schemas/LabelUserInfo"
    LabelRulesInfoRes:
      description: 灰度标签的发布规则列表
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: "#/components/schemas/LabelRuleInfo"
    LabelRuleInfoRes:
      description: 灰度标签的发布规则结果
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/LabelRuleInfo"
    SettingReleaseInfoRes:
      description: 设置配置项返回结果
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/SettingReleaseInfo"
    SettingGroupsInfoRes:
      description: 配置项作用的群组列表
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: "#/components/schemas/SettingGroupInfo"
    SettingUsersInfoRes:
      description: 配置项作用的用户列表
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: "#/components/schemas/SettingUserInfo"
    SettingRulesInfoRes:
      description: 配置项的发布规则列表
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: "#/components/schemas/SettingRuleInfo"
    SettingRuleInfoRes:
      description: 配置项的发布规则结果
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/SettingRuleInfo"
    UsersRes:
      description: 用户列表
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    UserRes:
      description: 单个用户结果
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/User"
paths:
  /version:
    get:
      tags:
        - Version
      summary: 获取版本信息
      responses:
        '200':
          $ref: '#/components/responses/Version'

  /healthz:
    get:
      tags:
        - Version
      summary: 服务健康检查接口
      responses:
        '200':
          $ref: '#/components/responses/Healthz'  # User API
  /users/{uid}/labels:cache:
    get:
      tags:
        - User
      summary: 该接口为灰度网关提供用户的灰度信息，用于服务端灰度。获取指定 uid 用户在指定 product 产品下的所有（未分页，最多 400 条）灰度标签，包括从 group 群组继承的灰度标签，按照 label 指派时间反序。网关只会取匹配 client 和 channel 的第一条。标签列表不是实时数据，会被服务缓存，缓存时间在 config.cache_label_expire 配置，默认为 1 分钟，建议生产配置为 5 分钟。当 uid 对应用户不存在或 product 对应产品不存在时，该接口会返回空灰度标签列表
      parameters:
        - $ref: "#/components/parameters/PathUID"
        - $ref: "#/components/parameters/QueryProduct"
      responses:
        '200':
          $ref: "#/components/responses/CacheLabelsInfo"

  /v1/users:
    get:
      tags:
        - User
      summary: 获取用户列表，支持分页，按照标签指派时间倒序
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/UsersRes'

  /v1/users/{uid}/settings:unionAll:
    get:
      tags:
        - User
      summary: 该接口为客户端提供用户的产品功能模块配置项信息，用于客户端功能灰度。获取指定 uid 用户在指定 product 产品下的功能模块配置项信息列表，包括从 group 群组继承的配置项信息列表，按照 setting 值更新时间 updatedAt 反序。该 API 支持分页，默认获取最新更新的前 10 条，分页参数 nextPageToken 为更新时间 updatedAt 值（进行了 encodeURI 转义）。如果客户端本地缓存了 setting 列表，可以判断 nextPageToken 的值，如果 **为空** 或者其值小于本地缓存的最大 updatedAt 值，就不用读取下一页了。该 API 还支持 channel 和 client 参数，让客户端只读取匹配 client 和 channel 的 setting 列表。当 uid 对应用户不存在时，该接口会返回空配置项列表
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
        - $ref: "#/components/parameters/QueryProduct"
        - in: query
          name: channel
          description: 版本通道，必须为服务端配置的有效值，只返回匹配 channel 的 setting 列表
          required: false
          schema:
            type: string
            example: beta
        - in: query
          name: client
          description: 客户端类型，必须为服务端配置的有效值，只返回匹配 client 的 setting 列表
          required: false
          schema:
            type: string
            example: ios
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
      responses:
        '200':
          $ref: "#/components/responses/MySettingsRes"

  /v1/users/{uid}/labels:
    get:
      tags:
        - User
      summary: 获取指定 uid 用户灰度标签列表，不包括从群组继承的灰度标签，支持分页，按照标签指派时间倒序
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/MyLabelsRes'

  /v1/users/{uid}/labels:cache:
    put:
      tags:
        - User
      summary: 强制刷新指定用户的灰度标签列表缓存
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
      responses:
        '200':
          $ref: '#/components/responses/UserRes'

  /v1/users/{uid}/settings:
    get:
      tags:
        - User
      summary: 获取指定 uid 用户在指定产品线下的功能模块配置项列表，不包括从群组继承的配置项，支持分页，按照配置项指派时间倒序
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/MySettingsRes'

  /v1/users/{uid}/exists:
    get:
      tags:
        - User
      summary: 判断指定 uid 用户是否存在
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/users:batch:
    post:
      tags:
        - User
      summary: 批量添加用户，忽略已存在的用户
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
      requestBody:
        $ref: '#/components/requestBodies/UsersBody'
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/users/{uid}/labels/{hid}:
    delete:
      tags:
        - User
      summary: 移除指定 uid 用户的指定 hid 灰度标签
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
        - $ref: "#/components/parameters/PathHID"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/users/{uid}/settings/{hid}:rollback:
    put:
      tags:
        - User
      summary: 回滚指定 uid 用户的指定 hid 配置项值到上一个，只能回退到上一个值，不能到上上个值
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
        - $ref: "#/components/parameters/PathHID"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/users/{uid}/settings/{hid}:
    delete:
      tags:
        - User
      summary: 移除指定 uid 用户的指定 hid 配置项
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
        - $ref: "#/components/parameters/PathHID"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'  # Group API
  /v1/groups/{uid}/labels:
    get:
      tags:
        - Group
      summary: 获取指定 uid 群组灰度标签列表，支持分页，按照标签指派时间倒序。
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/MyLabelsRes'

  /v1/groups/{uid}/settings:
    get:
      tags:
        - Group
      summary: 获取指定 uid 群组的功能模块配置项列表，支持分页，按照配置项指派时间倒序
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/MySettingsRes'

  /v1/groups:
    get:
      tags:
        - Group
      summary: 读取群组列表，支持分页，按照创建时间倒序
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - in: query
          name: kind
          description: 查询指定 kind 类型的群组，未提供则查询所有类型
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/GroupsRes'

  /v1/groups/{uid}/exists:
    get:
      tags:
        - Group
      summary: 判断指定 uid 群组是否存在
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/groups:batch:
    post:
      tags:
        - Group
      summary: 批量添加群组，忽略已存在的群组，群组 uid 必须唯一
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
      requestBody:
        $ref: '#/components/requestBodies/GroupsBody'
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/groups/{uid}:
    put:
      tags:
        - Group
      summary: 更新指定 uid 群组
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
      requestBody:
        $ref: '#/components/requestBodies/GroupUpdateBody'
      responses:
        '200':
          $ref: '#/components/responses/GroupRes'
    delete:
      tags:
        - Group
      summary: 删除指定 uid 群组
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/groups/{uid}/labels/{hid}:
    delete:
      tags:
        - Group
      summary: 移除指定 uid 群组的指定 hid 灰度标签
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
        - $ref: "#/components/parameters/PathHID"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/groups/{uid}/settings/{hid}:rollback:
    put:
      tags:
        - Group
      summary: 回滚指定 uid 群组的指定 hid 配置项值到上一个，只能回退到上一个值，不能到上上个值
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
        - $ref: "#/components/parameters/PathHID"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/groups/{uid}/settings/{hid}:
    delete:
      tags:
        - Group
      summary: 移除指定 uid 群组的指定 hid 配置项
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
        - $ref: "#/components/parameters/PathHID"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/groups/{uid}/members:batch:
    post:
      tags:
        - Group
      summary: 批量添加群组成员，如果群组成员已存在，则会更新成员的 syncAt 值为 group 的 syncAt 值
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
      requestBody:
        $ref: '#/components/requestBodies/UsersBody'
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/groups/{uid}/members:
    get:
      tags:
        - Group
      summary: 获取指定 uid 群组的成员列表，支持分页，按照成员添加时间倒序
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/GroupMembersRes'
    delete:
      tags:
        - Group
      summary: 移除群组指定 user 的成员或批量移除同步时间点小于 syncLt 的成员
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathUID"
        - in: query
          name: user
          description: 移除群组指定 user 的成员
          required: false
          schema:
            type: string
        - in: query
          name: syncLt
          description: 批量移除同步时间点小于 syncLt 的成员
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'  # Product API
  /v1/products:
    get:
      tags:
        - Product
      summary: 读取产品列表，支持分页，按照创建时间倒序
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/ProductsRes'
        '401':
          $ref: '#/components/responses/ErrorResponse'
    post:
      tags:
        - Product
      summary: 添加产品，产品 name 必须唯一
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
      requestBody:
        $ref: '#/components/requestBodies/NameDescBody'
      responses:
        '200':
          $ref: '#/components/responses/ProductRes'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'

  /v1/products/{product}:
    put:
      tags:
        - Product
      summary: 更新指定 product name 的产品
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
      requestBody:
        $ref: '#/components/requestBodies/ProductUpdateBody'
      responses:
        '200':
          $ref: '#/components/responses/GroupRes'
    delete:
      tags:
        - Product
      summary: 删除指定 product name 的产品，产品必须下线后才能被删除
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/products/{product}:offline:
    put:
      tags:
        - Product
      summary: 将指定 product name 的产品下线，此操作会将产品名下的所有功能模块和配置项都下线，所有设置给用户或群组的对应配置项和灰度标签也会被移除！
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/products/{product}/statistics:
    put:
      tags:
        - Product
      summary: 将指定 product name 的产品的统计数据
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
      responses:
        '200':
          $ref: '#/components/responses/ProductStatisticsRes'  # Module API
  /v1/products/{product}/labels:
    get:
      tags:
        - Label
      summary: 读取产品下灰度标签列表，支持分页，按照创建时间倒序
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/LabelsInfoRes'
    post:
      tags:
        - Label
      summary: 添加产品灰度标签，灰度标签 name 在产品下必须唯一
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
      requestBody:
        $ref: '#/components/requestBodies/LabelBody'
      responses:
        '200':
          $ref: '#/components/responses/LabelInfoRes'

  /v1/products/{product}/labels/{label}:
    put:
      tags:
        - Label
      summary: 更新指定 product name 的产品
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathLabel"
      requestBody:
        $ref: '#/components/requestBodies/LabelUpdateBody'
      responses:
        '200':
          $ref: '#/components/responses/LabelInfoRes'

  /v1/products/{product}/labels/{label}:offline:
    put:
      tags:
        - Label
      summary: 将指定产品灰度标签下线，所有设置给用户或群组的对应灰度标签也会被移除！
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathLabel"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/products/{product}/labels/{label}:assign:
    post:
      tags:
        - Label
      summary: 批量为用户或群组设置灰度标签
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathLabel"
      requestBody:
        $ref: '#/components/requestBodies/UsersGroupsBody'
      responses:
        '200':
          $ref: '#/components/responses/LabelReleaseInfoRes'

  /v1/products/{product}/labels/{label}:recall:
    post:
      tags:
        - Label
      summary: 批量撤销对用户或群组设置的产品灰度标签
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathLabel"
      requestBody:
        $ref: '#/components/requestBodies/RecallBody'
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/products/{product}/labels/{label}/users:
    get:
      tags:
        - Label
      summary: 读取指定产品灰度标签的用户列表
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathLabel"
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/LabelUsersInfoRes'

  /v1/products/{product}/labels/{label}/groups:
    get:
      tags:
        - Label
      summary: 读取指定产品灰度标签的群组列表
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathLabel"
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/LabelGroupsInfoRes'

  /v1/products/{product}/labels/{label}/rules:
    get:
      tags:
        - Label
      summary: 读取指定产品灰度标签的灰度发布规则列表
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathLabel"
      responses:
        '200':
          $ref: '#/components/responses/LabelRulesInfoRes'
    post:
      tags:
        - Label
      summary: 创建指定产品灰度标签的灰度发布规则，同一个灰度标签同一种 kind 的发布规则只能创建一个
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathLabel"
      requestBody:
        $ref: '#/components/requestBodies/LabelRuleBody'
      responses:
        '200':
          $ref: '#/components/responses/LabelRuleInfoRes'

  /v1/products/{product}/labels/{label}/rules/{hid}:
    put:
      tags:
        - Label
      summary: 更新指定产品灰度标签的灰度发布规则
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathLabel"
        - $ref: "#/components/parameters/PathHID"
      requestBody:
        $ref: '#/components/requestBodies/LabelRuleBody'
      responses:
        '200':
          $ref: '#/components/responses/LabelRuleInfoRes'
    delete:
      tags:
        - Label
      summary: 删除指定产品灰度标签的灰度发布规则
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathLabel"
        - $ref: "#/components/parameters/PathHID"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'  # Module API
  /v1/products/{product}/modules:
    get:
      tags:
        - Module
      summary: 读取产品功能模块列表，支持分页，按照创建时间倒序
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/ModulesRes'
    post:
      tags:
        - Module
      summary: 添加产品功能模块，功能模块 name 在产品下必须唯一
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
      requestBody:
        $ref: '#/components/requestBodies/NameDescBody'
      responses:
        '200':
          $ref: '#/components/responses/ModuleRes'

  /v1/products/{product}/modules/{module}:
    put:
      tags:
        - Module
      summary: 更新指定 product name 的产品
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
      requestBody:
        $ref: '#/components/requestBodies/ModuleUpdateBody'
      responses:
        '200':
          $ref: '#/components/responses/ModuleRes'

  /v1/products/{product}/modules/{module}:offline:
    put:
      tags:
        - Module
      summary: 将指定产品功能模块下线，此操作会将功能模块名下的所有配置项都下线，所有设置给用户或群组的对应配置项也会被移除！
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'  # Module API
  /v1/products/{product}/settings:
    get:
      tags:
        - Setting
      summary: 读取产品的配置项列表，支持分页，按照创建时间倒序
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/SettingsInfoRes'

  /v1/products/{product}/modules/{module}/settings:
    get:
      tags:
        - Setting
      summary: 读取产品功能模块配置项列表，支持分页，按照创建时间倒序
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/SettingsInfoRes'
    post:
      tags:
        - Setting
      summary: 添加产品功能模块的配置项，配置项 name 在功能模块下必须唯一
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
      requestBody:
        $ref: '#/components/requestBodies/SettingBody'
      responses:
        '200':
          $ref: '#/components/responses/SettingsInfoRes'

  /v1/products/{product}/modules/{module}/settings/{setting}:
    get:
      tags:
        - Setting
      summary: 读取指定配置项
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
        - $ref: "#/components/parameters/PathSetting"
      responses:
        '200':
          $ref: '#/components/responses/SettingInfoRes'
    put:
      tags:
        - Setting
      summary: 更新指定配置项
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
        - $ref: "#/components/parameters/PathSetting"
      requestBody:
        $ref: '#/components/requestBodies/SettingUpdateBody'
      responses:
        '200':
          $ref: '#/components/responses/SettingInfoRes'

  /v1/products/{product}/modules/{module}/settings/{setting}:offline:
    put:
      tags:
        - Setting
      summary: 将指定配置项下线，所有设置给用户或群组的对应配置项也会被移除！
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
        - $ref: "#/components/parameters/PathSetting"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/products/{product}/modules/{module}/settings/{setting}:assign:
    post:
      tags:
        - Setting
      summary: 批量为用户或群组设置配置项
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
        - $ref: "#/components/parameters/PathSetting"
      requestBody:
        $ref: '#/components/requestBodies/UsersGroupsBody'
      responses:
        '200':
          $ref: '#/components/responses/SettingReleaseInfoRes'

  /v1/products/{product}/modules/{module}/settings/{setting}:recall:
    post:
      tags:
        - Setting
      summary: 批量撤销对用户或群组设置的产品功能配置项
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
        - $ref: "#/components/parameters/PathSetting"
      requestBody:
        $ref: '#/components/requestBodies/RecallBody'
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'

  /v1/products/{product}/modules/{module}/settings/{setting}/users:
    get:
      tags:
        - Setting
      summary: 读取指定产品功能配置项的用户列表
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
        - $ref: "#/components/parameters/PathSetting"
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/SettingUsersInfoRes'

  /v1/products/{product}/modules/{module}/settings/{setting}/groups:
    get:
      tags:
        - Setting
      summary: 读取指定产品功能配置项的群组列表
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
        - $ref: "#/components/parameters/PathSetting"
        - $ref: "#/components/parameters/QueryPageSize"
        - $ref: "#/components/parameters/QueryPageToken"
        - $ref: "#/components/parameters/QueryQ"
      responses:
        '200':
          $ref: '#/components/responses/SettingGroupsInfoRes'

  /v1/products/{product}/modules/{module}/settings/{setting}/rules:
    get:
      tags:
        - Setting
      summary: 读取指定产品功能配置项发布规则列表
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
        - $ref: "#/components/parameters/PathSetting"
      responses:
        '200':
          $ref: '#/components/responses/SettingRulesInfoRes'
    post:
      tags:
        - Setting
      summary: 创建指定产品功能配置项的灰度发布规则，同一个功能配置项同一种 kind 的发布规则只能创建一个
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
        - $ref: "#/components/parameters/PathSetting"
      requestBody:
        $ref: '#/components/requestBodies/SettingRuleBody'
      responses:
        '200':
          $ref: '#/components/responses/SettingRuleInfoRes'

  /v1/products/{product}/modules/{module}/settings/{setting}/rules/{hid}:
    put:
      tags:
        - Setting
      summary: 更新指定产品功能配置项的灰度发布规则
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
        - $ref: "#/components/parameters/PathSetting"
        - $ref: "#/components/parameters/PathHID"
      requestBody:
        $ref: '#/components/requestBodies/SettingRuleBody'
      responses:
        '200':
          $ref: '#/components/responses/SettingRuleInfoRes'
    delete:
      tags:
        - Setting
      summary: 删除指定产品功能配置项的灰度发布规则
      security:
        - HeaderAuthorizationJWT: {}
      parameters:
        - $ref: '#/components/parameters/HeaderAuthorization'
        - $ref: "#/components/parameters/PathProduct"
        - $ref: "#/components/parameters/PathModule"
        - $ref: "#/components/parameters/PathSetting"
        - $ref: "#/components/parameters/PathHID"
      responses:
        '200':
          $ref: '#/components/responses/BoolRes'